buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }

    dependencies {
        classpath 'com.github.UserTeemu:ForgeGradle:aa7e4ae39a:all'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

apply plugin: "kotlin"
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

version = project.version
group = project.group
archivesBaseName = project.archivesBaseName

sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass ${project.tweakClass}"

    replaceIn "TransitionsMod.java"
    replace "@MOD_VERSION@", project.version
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://repo.spongepowered.org/repository/maven-public' }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

dependencies {
    shadow "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    shadow "net.modcore:Loader:2.0.0"
    provided("net.modcore:ModCore:799-10809-SNAPSHOT") {
        exclude module: 'asm-commons'
        exclude module: 'asm-tree'
        exclude module: 'asm'
        exclude module: 'WaifUPnP'
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.jetbrains.kotlinx'
    }
}

shadowJar {
    archiveBaseName.set(jar.archiveBaseName)
    archiveClassifier.set(jar.archiveClassifier)
    configurations = [project.configurations.shadow]
    relocate 'org.jetbrains.kotlinx', "org.jetbrains.kotlinx-v${kotlin_version.replace('.', '-')}"
    relocate 'org.jetbrains.kotlin', "org.jetbrains.kotlin-v${kotlin_version.replace('.', '-')}"
    relocate 'kotlin', "kotlin-v${kotlin_version.replace('.', '-')}"
}

reobfJar {
    setJar(shadowJar.getArchiveFile())
}
tasks.reobfJar.dependsOn shadowJar
jar.enabled = false

jar {
    exclude "club/sk1er/patcher/**" // excludes the dummy Patcher config file, that is used to solve a conflict
    manifest {
        attributes(
                "TweakClass": project.tweakClass,
                "TweakOrder": "0",
                "ModSide": "CLIENT",
                'FMLAT': project.accessTransformerFile
        )
    }
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}